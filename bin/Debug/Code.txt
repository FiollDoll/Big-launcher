        private void CreateButton(string action, string command, bool newButton = false, int id = 0)
        {
            if (action != "")
            {
                panelCreate.Visible = false;
                Button button = new Button();
                groupButtons.Controls.Add(button);

                if (id == 0)
                {
                    int buttonsCount = 0;
                    for (int i = 0; i < buttonsInScene.buttons.Count; i++)
                    {
                        if (buttonsInScene.buttons[i].position.page == pageTotal)
                            buttonsCount++;
                    }
                    id = buttonsCount;
                }

                if (newButton)
                {
                    if (textBoxNameCommand.Text == "")
                        textBoxNameCommand.Text = action;
                    button.Name = textBoxNameCommand.Text;
                    button.Text = textBoxNameCommand.Text;
                    if (id == 0)
                        buttonsInScene.buttons.Add(new ButtonInfo(id, button.Name, command, textBoxNameCommand.Text, action, new ButtonLocation(pageTotal, 10, 20), checkBoxOption.Checked, checkBoxOtherOption.Checked));
                    else
                    {
                        if (buttonsInScene.buttons[buttonsInScene.buttons.Count - 1].position.x >= 250) // Новая строка
                            buttonsInScene.buttons.Add(new ButtonInfo(id, button.Name, command, textBoxNameCommand.Text, action, new ButtonLocation(pageTotal, 10, buttonsInScene.buttons[buttonsInScene.buttons.Count - 1].position.y + 50), checkBoxOption.Checked, checkBoxOtherOption.Checked));

                        else
                            buttonsInScene.buttons.Add(new ButtonInfo(id, button.Name, command, textBoxNameCommand.Text, action, new ButtonLocation(pageTotal, buttonsInScene.buttons[buttonsInScene.buttons.Count - 1].position.x + 80, buttonsInScene.buttons[buttonsInScene.buttons.Count - 1].position.y), checkBoxOption.Checked, checkBoxOtherOption.Checked));

                        button.Location = new Point(buttonsInScene.buttons[buttonsInScene.buttons.Count - 1].position.x, buttonsInScene.buttons[buttonsInScene.buttons.Count - 1].position.y);
                    }
                }
                else
                {
                    button.Name = buttonsInScene.buttons[id - 1].name;
                    button.Text = buttonsInScene.buttons[id - 1].name;
                    button.Location = new Point(buttonsInScene.buttons[id - 1].position.x, buttonsInScene.buttons[id - 1].position.y);
                }

                button.Click += ButtonOnClick;

                XmlSerializer xmlSerializer = new XmlSerializer(typeof(ButtonsInScene));

                using (FileStream fs = new FileStream(@"buttons.xml", FileMode.OpenOrCreate))
                    xmlSerializer.Serialize(fs, buttonsInScene);

                textBoxNameCommand.Text = "";
                checkBoxOption.Checked = false;
                checkBoxOtherOption.Visible = false;
                checkBoxOtherOption.Checked = false;
                action = "";
                textBoxCommand.Text = "";

            }
            else
                MessageBox.Show("Не вписана команда!");

            buttonPath.Visible = false;
        }

        private void EditPage(int pageEdit)
        {
            pageTotal += pageEdit;

            for (int i = 0; i < buttonsInScene.buttons.Count; i++) // Очистка
            {
                if (groupButtons.Controls.ContainsKey(buttonsInScene.buttons[i].name))
                {
                    var button = groupButtons.Controls[buttonsInScene.buttons[i].name];
                    //(button as Button).Visible = false;
                    groupButtons.Controls.Remove(button);
                }
            }

            for (int i = 0; i < buttonsInScene.buttons.Count; i++)
            {
                if (buttonsInScene.buttons[i].position.page == pageTotal)
                    CreateButton(buttonsInScene.buttons[i].action, buttonsInScene.buttons[i].command, false, i);
            }

            if (pageTotal == 0)
                buttonBackPage.Visible = false;
            else
                buttonBackPage.Visible = true;

            labelPage.Text = (pageTotal + 1).ToString();
        }


        private void buttonNextPage_Click(object sender, EventArgs e) => EditPage(+1);

        private void buttonBackPage_Click(object sender, EventArgs e) => EditPage(-1);